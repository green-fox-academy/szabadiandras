'use strict';

console.log(
    [1, 2, 3, 4].reduce((a, b) => a + b, 0)
  )
  console.log(
    [].reduce((a, b) => a + b, 0)
  )




// Write a program that calculates the sum and the average from 1 to a given number.
// Example input: 5
// Example output: Sum: 15, Average: 3let a: number = 0;

// // let number2: number = 5;
// // let multiplier2: number;
// // for (let multiplier2: number = 1; multiplier2 <= 5; multiplier2++){
// //     let sum = 
// //     console.log(multiplier2);
// //     //let value2 = multiplier2 + number2
// //     //console.log(value2);
// // 
// // }


// let inputNr: number = 25;
// let baseNr: number;
// for (let baseNr: number = 1; baseNr <= 25; baseNr++){
//      let sumNr = inputNr + baseNr
//     // let avgNr = sumNr / inputNr
//     // console.log('Input: ' + inputNr);
//     // console.log('Sum: ' + sumNr);
//     // console.log('Average: ' + avgNr);
//     console.log(sumNr);
// }

'use strict';

// Write a program that prints the numbers from 1 to 100.
// But for multiples of three print “Fizz” instead of the number
// and for the multiples of five print “Buzz”.
// For numbers which are multiples of both three and five print “FizzBuzz”.

------------

// let fizzNumber: number = 100;
// let buzzNumber: number = 1;
// 
// for (let buzzNumber: number = 1; buzzNumber <= fizzNumber; buzzNumber++) {
//     console.log(buzzNumber);
// 
//     if (buzzNumber % 3 == 0) {
//         console.log("Fizz");
//     } else if (buzzNumber % 5 == 0) {
//         console.log("Buzz");
//     }
// }



//        let fizzNumber: number = 100;
//        let buzzNumber: number = 1;
//        
//        for (let buzzNumber: number = 1; buzzNumber <= fizzNumber; buzzNumber++) {
//            console.log(buzzNumber);
//        
//            if (buzzNumber % 3 == 0) {
//                console.log("Fizz");
//            } else if (buzzNumber % 5 == 0) {
//                console.log("Buzz");
//            } else if (buzzNumber % 3 == 0 && buzzNumber % 5 == 0) {
//                console.log("FizzBuzz");
//            }
//        }


--- the pyramid ---

let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;

function pyramid (star, actCount) {
    let thePyramid = "";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        console.log(thePyramid);
}
    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
            pyramid(star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid(star, lineMinus++);
        }
}


--- chess base ---
let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;
let space = ('');

function pyramid (star, actCount) {
    let thePyramid = "";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        console.log(thePyramid);
}
    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
           pyramid('a' + star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid(star, lineMinus++);
        }
}


--- backup pyramid ---

let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;
let space = (' ');
let spaceCount: number = 1;

function pyramid (star, actCount) {
    let thePyramid = "";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        console.log(thePyramid);
}

    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
            let space = ('xx')
            pyramid (star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid (star, lineMinus++);
        }
    }






        if (thePyramid += '*') {
        let n: number = 1; n <= actCount; n++
        console.log(space + n + thePyramid);
    }
}


-- backup.2 --

let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;
let space = ('xx');
let spaceCount: number = 1;

function pyramid (star, actCount) {
    let thePyramid = " ";
    let starSpace = "XY";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        let insertSpace = ' ';
        console.log(starSpace + thePyramid);
}
    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
            let space = ('xx')
            pyramid (star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid (star, lineMinus++);
        }
    }


+ "&nbsp;"

    -----------------------bu

    'use strict';

// Write a program that draws a
// pyramid like this:
//
//    *
//   ***
//  *****
// *******
//
// The pyramid should have as many lines as lineCount is


let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;
let space = ('xx');
let spaceCount: number = 1;

function pyramid (star, actCount) {
    let thePyramid = " ";
    let starSpace = "XY";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        let insertSpace = ' ';
        console.log(starSpace + thePyramid);
}
    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
            let space = ('xx')
            pyramid (star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid (star, lineMinus++);
        }
    }


    -
    -
    -


let lineCount: number = 4;
let actCount = lineCount * 2;
let star = '*';
let lineMinus: number;
let space = ('xx');
let spaceCount: number = 1;

function pyramid (star, actCount) {
    let thePyramid = "";
    let starSpace = " ";
    for (let starNum: number = 1; starNum <= actCount; starNum++) {
        thePyramid += star;
        }
        console.log(starSpace + thePyramid);
}
    for (let lineMinus: number = 1; lineMinus <= actCount; lineMinus++) {
        if (lineMinus % 2 !== 0) {
            let space = ('xx')
            pyramid (star, lineMinus++);
        } else if (lineMinus == 1) {
            pyramid (star, lineMinus++);
        }
    }